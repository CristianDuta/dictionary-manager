{"version":3,"sources":["service/dictionary.validator.js","reducers/dictionary.reducer.js","fixtures/dictionaries.js","context/dictionary.context.js","hooks/useLocalStorageReducer.js","components/Dictionary.js","components/DictionaryItem.js","components/DictionaryList.js","components/AddDictionaryButton.js","hooks/useDidUpdateEffect.js","components/NavigationBreadcrumbs.js","components/HelpSnackBarAndButton.js","App.js","serviceWorker.js","index.js"],"names":["ValidateDictionary","dictionary","row","errors","Set","warnings","delete","rowId","data","domain","range","add","reducer","state","action","type","id","uuid","title","length","filter","map","forEach","rowData","newRow","splice","findIndex","DictionaryContext","createContext","DispatchContext","DictionaryProvider","props","key","defaultVal","useReducer","value","JSON","parse","window","localStorage","getItem","String","e","dispatch","useEffect","setItem","stringify","useLocalStorageReducer","defaultDictionaries","dictionaryReducer","dictionaries","Provider","children","useStyles","makeStyles","theme","textField","margin","spacing","Dictionary","classes","useParams","location","useLocation","history","useHistory","searchParams","URLSearchParams","search","useContext","find","dispatchTableAction","Promise","resolve","customFilterAndSearch","term","decodedTerm","decodeURIComponent","termIsMatchedInRowData","some","k","toLowerCase","includes","Array","isArray","Paper","TextField","className","defaultValue","inputProps","onChange","event","target","columns","field","defaultFilter","get","editable","onRowAdd","onRowUpdate","onRowDelete","options","rowStyle","backgroundColor","red","orange","actionsColumnIndex","actions","icon","tooltip","onClick","termsQuery","encodeURIComponent","push","green","DictionaryItem","avatar","Avatar","data-test-id","Check","Close","Warning","Card","CardHeader","Table","table","size","TableBody","slice","TableRow","TableCell","CardContent","CardActions","disableSpacing","IconButton","aria-label","component","Link","to","Edit","Delete","DictionaryList","Grid","container","direction","justify","alignItems","item","xs","sm","md","lg","fab","position","bottom","right","AddDictionaryButton","lastDictionaryInList","useState","setState","fn","inputs","didMountRef","useRef","current","useDidUpdateEffect","Fab","color","root","paddingBottom","link","display","marginRight","width","height","NavigationBreadcrumbs","searchTerms","path","exact","render","Breadcrumbs","Typography","match","params","breadcrumbs","el","breadcrumb","index","RouterLink","HelpSnackBarAndButton","isOpen","setIsOpen","Fragment","Snackbar","open","message","Button","App","style","padding","elevation","AppBar","Toolbar","Container","maxWidth","marginTop","basename","Boolean","hostname","ReactDOM","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.7fd4c535.chunk.js","sourcesContent":["function ValidateDictionary(dictionary, row) {\n    let errors = new Set(dictionary.errors);\n    let warnings = new Set(dictionary.warnings);\n\n    errors.delete(row.rowId);\n    warnings.delete(row.rowId);\n\n    for (const {rowId, domain, range} of dictionary.data) {\n        if (row.rowId === rowId) {\n            continue;\n        }\n\n        if (row.domain === domain && row.range === range) {\n            warnings.add(row.rowId);\n            warnings.add(rowId);\n        }\n\n        if (row.domain === domain && row.range !== range) {\n            warnings.add(row.rowId);\n            warnings.add(rowId);\n        }\n\n        if (row.domain === range || row.range === domain) {\n            warnings.add(row.rowId);\n            warnings.add(rowId);\n        }\n\n        if (row.domain === range && row.range === domain) {\n            errors.add(row.rowId);\n            errors.add(rowId);\n        }\n    }\n\n    dictionary.errors = [...errors];\n    dictionary.warnings = [...warnings];\n}\n\nexport default ValidateDictionary;\n","import uuid from \"uuid/v4\";\nimport ValidateDictionary from \"../service/dictionary.validator\";\n\nconst reducer = (state, action) => {\n    switch (action.type) {\n        case \"CREATE\":\n            return [...state, {id: uuid(), title: `Dictionary #${state.length + 1}`, data: [], errors: [], warnings: []}];\n        case \"DELETE\":\n            return state.filter(dictionary => dictionary.id !== action.id);\n        case 'UPDATE_TITLE':\n            return state.map(dictionary =>\n                dictionary.id === action.id ? {\n                    ...dictionary,\n                    title: action.title\n                } : dictionary\n            );\n        case \"ADD_ROW\":\n            return state.map(dictionary => {\n                if (dictionary.id !== action.id) {\n                    return dictionary;\n                }\n                dictionary.data = [\n                    ...dictionary.data,\n                    {rowId: uuid(), domain: action.domain, range: action.range}\n                ];\n\n                dictionary.data.forEach(rowData => ValidateDictionary(dictionary, rowData));\n                return dictionary;\n            });\n        case \"REMOVE_ROW\":\n            return state.map(dictionary => {\n                if (dictionary.id !== action.id) {\n                    return dictionary;\n                }\n                dictionary.data = dictionary.data.filter(row => row.rowId !== action.rowId);\n                dictionary.errors = dictionary.errors.filter(rowId => rowId !== action.rowId);\n                dictionary.warnings = dictionary.warnings.filter(rowId => rowId !== action.rowId);\n\n                dictionary.data.forEach(rowData => ValidateDictionary(dictionary, rowData));\n                return dictionary;\n            });\n        case \"UPDATE_ROW\":\n            const newRow = {rowId: uuid(), domain: action.domain, range: action.range};\n\n            return state.map(dictionary => {\n                if (dictionary.id !== action.id) {\n                    return dictionary;\n                }\n                dictionary.data.splice(dictionary.data.findIndex(row => row.rowId === newRow.rowId), 1, newRow);\n\n                dictionary.data.forEach(rowData => ValidateDictionary(dictionary, rowData));\n                return dictionary;\n            });\n        default:\n            return state;\n    }\n};\n\nexport default reducer;\n","export default [\n    {\n        id: \"49145347-0ab6-4e16-be6a-f228cf64a2b6\",\n        title: \"Dictionary #1\",\n        data: [\n            {\n                rowId: \"1570f8b5-e264-470a-8c74-fecaf2cd8332\",\n                domain: 'Stonegrey',\n                range: 'Dark Grey'\n            },\n            {\n                rowId: \"f0b9ff3a-68c3-4c55-aaae-9d5ee51e1316\",\n                domain: 'Anthracite',\n                range: 'Dark Grey'\n            },\n            {\n                rowId: \"ccb4d6ab-7aff-453b-b0c6-d749c16304a6\",\n                domain: 'Midnight Blue',\n                range: 'Dark Blue'\n            }\n        ],\n        warnings: [],\n        errors: []\n    },\n    {\n        id: \"0847e3e0-c240-4b22-b8f9-15bc868c70e3\",\n        title: \"Dictionary #2\",\n        data: [\n            {\n                rowId: \"1570f8b5-e264-470a-8c74-fecaf2cd8332\",\n                domain: 'Stonegrey',\n                range: 'Dark Grey'\n            },\n            {\n                rowId: \"f0b9ff3a-68c3-4c55-aaae-9d5ee51e1316\",\n                domain: 'Anthracite',\n                range: 'Dark Grey'\n            },\n            {\n                rowId: \"ccb4d6ab-7aff-453b-b0c6-d749c16304a6\",\n                domain: 'Midnight Blue',\n                range: 'Dark Blue'\n            },\n        ],\n        warnings: [],\n        errors: []\n    },\n    {\n        id: \"75968425-7a45-442c-a968-6a509770a6ac\",\n        title: \"Dictionary #3\",\n        data: [\n            {\n                rowId: \"1570f8b5-e264-470a-8c74-fecaf2cd8332\",\n                domain: 'Stonegrey',\n                range: 'Dark Grey'\n            },\n            {\n                rowId: \"f0b9ff3a-68c3-4c55-aaae-9d5ee51e1316\",\n                domain: 'Anthracite',\n                range: 'Dark Grey'\n            },\n            {\n                rowId: \"ccb4d6ab-7aff-453b-b0c6-d749c16304a6\",\n                domain: 'Midnight Blue',\n                range: 'Dark Blue'\n            },\n            {\n                rowId: \"93e92ba5-faa7-4983-9f15-197af1edb24b\",\n                domain: \"Midnight Blue\",\n                range: \"Dark Blue\",\n            }\n        ],\n        warnings: [\n            \"ccb4d6ab-7aff-453b-b0c6-d749c16304a6\",\n            \"93e92ba5-faa7-4983-9f15-197af1edb24b\"\n        ],\n        errors: []\n    },\n    {\n        id: \"3cf8180c-40d3-430f-9510-114218709ec9\",\n        title: \"Dictionary #4\",\n        data: [\n            {\n                rowId: \"1570f8b5-e264-470a-8c74-fecaf2cd8332\",\n                domain: 'Stonegrey',\n                range: 'Dark Grey'\n            },\n            {\n                rowId: \"f0b9ff3a-68c3-4c55-aaae-9d5ee51e1316\",\n                domain: 'Anthracite',\n                range: 'Dark Grey'\n            },\n            {\n                rowId: \"ccb4d6ab-7aff-453b-b0c6-d749c16304a6\",\n                domain: 'Midnight Blue',\n                range: 'Dark Blue'\n            },\n            {\n                rowId: \"ce19c5ce-dc1a-47f5-ade8-4909aae3ec40\",\n                domain: \"Dark Grey\",\n                range: \"Stonegrey\"\n            }\n        ],\n        warnings: [\n            \"1570f8b5-e264-470a-8c74-fecaf2cd8332\",\n            \"f0b9ff3a-68c3-4c55-aaae-9d5ee51e1316\",\n            \"ce19c5ce-dc1a-47f5-ade8-4909aae3ec40\"\n        ],\n        errors: [\n            \"1570f8b5-e264-470a-8c74-fecaf2cd8332\",\n            \"ce19c5ce-dc1a-47f5-ade8-4909aae3ec40\"\n        ]\n    }\n];\n","import React, {createContext} from \"react\";\nimport {useLocalStorageReducer} from \"../hooks/useLocalStorageReducer\";\nimport dictionaryReducer from \"../reducers/dictionary.reducer\";\nimport defaultDictionaries from \"../fixtures/dictionaries\";\n\nexport const DictionaryContext = createContext();\nexport const DispatchContext = createContext();\n\nexport function DictionaryProvider(props) {\n    const [dictionaries, dispatch] = useLocalStorageReducer(\n        \"dictionaries\",\n        defaultDictionaries,\n        dictionaryReducer\n    );\n    return (\n        <DictionaryContext.Provider value={dictionaries}>\n            <DispatchContext.Provider value={dispatch}>\n                {props.children}\n            </DispatchContext.Provider>\n        </DictionaryContext.Provider>\n    );\n}\n","import {useReducer, useEffect} from \"react\";\n\nfunction useLocalStorageReducer(key, defaultVal, reducer) {\n    const [state, dispatch] = useReducer(reducer, defaultVal, () => {\n        let value;\n        try {\n            value = JSON.parse(\n                window.localStorage.getItem(key) || String(defaultVal)\n            );\n        } catch (e) {\n            value = defaultVal;\n        }\n        return value;\n    });\n    useEffect(() => {\n        window.localStorage.setItem(key, JSON.stringify(state));\n    }, [key, state]);\n\n    return [state, dispatch];\n}\n\nexport {useLocalStorageReducer};\n","import React, {useContext} from \"react\";\nimport Paper from \"@material-ui/core/Paper\";\nimport {DictionaryContext, DispatchContext} from \"../context/dictionary.context\";\nimport MaterialTable from \"material-table\";\nimport {makeStyles, TextField} from \"@material-ui/core\";\nimport {useParams, useLocation, useHistory} from \"react-router-dom\";\nimport {orange, red} from \"@material-ui/core/colors\";\n\nconst useStyles = makeStyles(theme => ({\n    textField: {\n        margin: theme.spacing(0)\n    },\n}));\n\nfunction Dictionary() {\n    const classes = useStyles();\n    const {id} = useParams();\n    const location = useLocation();\n    const history = useHistory();\n    const searchParams = new URLSearchParams(location.search);\n    const dispatch = useContext(DispatchContext);\n    const dictionaries = useContext(DictionaryContext);\n    const dictionary = dictionaries.find(dictionary => dictionary.id === id);\n\n    const dispatchTableAction = (action, data) => Promise.resolve(dispatch({\n        type: action, id: dictionary.id, ...data\n    }));\n\n    const customFilterAndSearch = (term, rowData) => {\n        let decodedTerm;\n\n        try {\n            decodedTerm = JSON.parse(decodeURIComponent(term));\n        } catch (e) {\n            decodedTerm = term;\n        }\n\n        const termIsMatchedInRowData = (term) => {\n            return [\"domain\", \"range\"].some((k) => rowData[k].toLowerCase().includes(term.toLowerCase()));\n        };\n\n        if (Array.isArray(decodedTerm)) {\n            return decodedTerm.some((term) => termIsMatchedInRowData(term));\n        } else {\n            return termIsMatchedInRowData(term);\n        }\n    };\n\n    return (\n        <Paper>\n            <MaterialTable\n                title={(\n                    <TextField\n                        className={classes.textField}\n                        defaultValue={dictionary.title}\n                        margin=\"normal\"\n                        inputProps={{'aria-label': 'bare'}}\n                        onChange={(event) => {\n                            dispatch({type: 'UPDATE_TITLE', id: dictionary.id, title: event.target.value})\n                        }}\n                    />\n                )}\n                columns={[\n                    {title: 'Domain', field: 'domain', defaultFilter: searchParams.get('terms'), customFilterAndSearch},\n                    {title: 'Range', field: 'range', defaultFilter: searchParams.get('terms'), customFilterAndSearch}\n                ]}\n                data={\n                    dictionary.data\n                }\n                editable={{\n                    onRowAdd: rowData => dispatchTableAction('ADD_ROW', rowData),\n                    onRowUpdate: rowData => dispatchTableAction('UPDATE_ROW', rowData),\n                    onRowDelete: rowData => dispatchTableAction('REMOVE_ROW', rowData)\n                }}\n                options={{\n                    rowStyle: rowData => ({\n                        backgroundColor: dictionary.errors.includes(rowData.rowId) ? red[400] :\n                            dictionary.warnings.includes(rowData.rowId) ? orange[200] : '#FFF'\n                    }),\n                    actionsColumnIndex: -1\n                }}\n                actions={[\n                    rowData => ({\n                        icon: 'search',\n                        tooltip: 'Find offenders',\n                        onClick: (event, rowData) => {\n                            const termsQuery = encodeURIComponent(JSON.stringify([rowData.domain, rowData.range]));\n                            history.push(`/dictionary/${dictionary.id}?terms=${termsQuery}`)\n                        }\n                    })\n                ]}\n\n            />\n        </Paper>\n    );\n}\n\nexport default Dictionary;\n","import React, {useContext} from 'react';\nimport {Card, CardHeader, CardContent, CardActions} from '@material-ui/core';\nimport {Avatar, IconButton} from '@material-ui/core';\nimport {Table, TableBody, TableCell, TableRow} from \"@material-ui/core\";\nimport {\n    Delete as DeleteIcon,\n    Edit as EditIcon,\n    Check as CheckIcon,\n    Warning as WarningIcon,\n    Close as CloseIcon\n} from '@material-ui/icons';\nimport {green, orange, red} from '@material-ui/core/colors';\nimport {makeStyles} from '@material-ui/core/styles';\nimport {Link} from 'react-router-dom'\nimport {DispatchContext} from \"../context/dictionary.context\";\n\nconst useStyles = makeStyles(() => ({\n    green: {\n        backgroundColor: green[500],\n    },\n    orange: {\n        backgroundColor: orange[500],\n    },\n    red: {\n        backgroundColor: red[500],\n    },\n}));\n\nfunction DictionaryItem({dictionary}) {\n    const classes = useStyles();\n    const dispatch = useContext(DispatchContext);\n\n    let avatar = (\n        <Avatar className={classes.green} data-test-id=\"dictionary-success-icon\">\n            <CheckIcon/>\n        </Avatar>\n    );\n\n    if (dictionary.errors.length > 0) {\n        avatar = (\n            <Avatar className={classes.red} data-test-id=\"dictionary-error-icon\">\n                <CloseIcon/>\n            </Avatar>\n        );\n    } else if (dictionary.warnings.length > 0) {\n        avatar = (\n            <Avatar className={classes.orange} data-test-id=\"dictionary-warning-icon\">\n                <WarningIcon/>\n            </Avatar>\n        );\n    }\n\n    return (\n        <Card>\n            <CardHeader\n                avatar={avatar}\n                title={dictionary.title}\n            />\n            <Table className={classes.table} size=\"small\">\n                <TableBody>\n                    {dictionary.data.slice(0, 3).map(row => (\n                        <TableRow key={row.rowId}>\n                            <TableCell>{row.domain}</TableCell>\n                            <TableCell>{row.range}</TableCell>\n                        </TableRow>\n                    ))}\n                </TableBody>\n            </Table>\n            <CardContent>\n\n            </CardContent>\n            <CardActions disableSpacing>\n                <IconButton aria-label=\"Modify Dictionary\" component={Link} to={`/dictionary/${dictionary.id}`}>\n                    <EditIcon/>\n                </IconButton>\n                <IconButton aria-label=\"Remove Dictionary\" onClick={() => {\n                    dispatch({type: 'DELETE', id: dictionary.id})\n                }}>\n                    <DeleteIcon/>\n                </IconButton>\n            </CardActions>\n        </Card>\n    );\n}\n\nexport default DictionaryItem;\n","import React, {useContext} from \"react\";\nimport Grid from '@material-ui/core/Grid';\nimport {DictionaryContext} from \"../context/dictionary.context\";\nimport DictionaryItem from \"./DictionaryItem\";\n\nfunction DictionaryList() {\n    const dictionaries = useContext(DictionaryContext);\n    return (\n        <Grid\n            container\n            direction=\"row\"\n            justify=\"flex-start\"\n            alignItems=\"flex-start\"\n            spacing={2}\n        >\n            {dictionaries.map(dictionary => (\n                <Grid key={dictionary.id} item xs={12} sm={6} md={4} lg={3}>\n                    <DictionaryItem dictionary={dictionary}/>\n                </Grid>\n            ))}\n        </Grid>\n    );\n}\n\nexport default DictionaryList;\n","import React, {useContext, useState} from 'react';\nimport {makeStyles} from '@material-ui/core/styles';\nimport Fab from '@material-ui/core/Fab';\nimport AddIcon from '@material-ui/icons/Add';\nimport {DictionaryContext, DispatchContext} from \"../context/dictionary.context\";\nimport {useHistory} from \"react-router-dom\";\nimport {useDidUpdateEffect} from \"../hooks/useDidUpdateEffect\";\n\nconst useStyles = makeStyles(theme => ({\n    fab: {\n        position: 'absolute',\n        bottom: theme.spacing(3),\n        right: theme.spacing(3),\n    },\n}));\n\nfunction AddDictionaryButton() {\n    const classes = useStyles();\n    const dispatch = useContext(DispatchContext);\n    const dictionaries = useContext(DictionaryContext);\n    const history = useHistory();\n\n    const lastDictionaryInList = dictionaries[dictionaries.length - 1];\n    const [state, setState] = useState(dictionaries.length);\n\n    useDidUpdateEffect(() => {\n        history.push(`/dictionary/${lastDictionaryInList.id}`);\n    }, [state]);\n\n    return (\n        <Fab aria-label=\"Add Dictionary\" className={classes.fab} color=\"primary\">\n            <AddIcon onClick={() => {dispatch({type: 'CREATE'}); setState(state+1)}}/>\n        </Fab>\n    );\n}\n\nexport default AddDictionaryButton;\n","import {useEffect, useRef} from \"react\";\n\nfunction useDidUpdateEffect(fn, inputs) {\n    const didMountRef = useRef(false);\n\n    useEffect(() => {\n        if (didMountRef.current)\n            fn();\n        else\n            didMountRef.current = true;\n        // eslint-disable-next-line\n    }, inputs);\n}\n\nexport {useDidUpdateEffect};\n","import React, {useContext} from 'react';\nimport {makeStyles} from '@material-ui/core/styles';\nimport {Typography, Breadcrumbs, Link} from '@material-ui/core';\nimport {Link as RouterLink, Route, useLocation} from 'react-router-dom'\nimport HomeIcon from '@material-ui/icons/Home';\nimport {DictionaryContext} from \"../context/dictionary.context\";\n\nconst useStyles = makeStyles(theme => ({\n    root: {\n        paddingBottom: theme.spacing(2,),\n    },\n    link: {\n        display: 'flex',\n    },\n    icon: {\n        marginRight: theme.spacing(0.5),\n        width: 20,\n        height: 20,\n    },\n}));\n\nfunction NavigationBreadcrumbs() {\n    const classes = useStyles();\n    const dictionaries = useContext(DictionaryContext);\n    const location = useLocation();\n    const searchTerms = new URLSearchParams(location.search).get('terms');\n\n    return (\n        <div className={classes.root}>\n            <Route\n                path=\"/\"\n                exact\n                render={() => (\n                    <Breadcrumbs aria-label=\"breadcrumb\">\n                        <Typography color=\"textPrimary\" className={classes.link}>\n                            <HomeIcon className={classes.icon}/>\n                            Dictionary List\n                        </Typography>\n                    </Breadcrumbs>\n                )}\n            />\n            <Route\n                path=\"/dictionary/:id\"\n                exact\n                render={({match}) => {\n                    const {id} = match.params;\n                    const dictionary = dictionaries.find(dictionary => dictionary.id === id);\n\n                    const breadcrumbs = [{\n                        el: <><HomeIcon className={classes.icon}/>Dictionary List</>,\n                        path: '/'\n                    }, {\n                        el: <>{dictionary.title}</>,\n                        path: `/dictionary/${dictionary.id}`\n                    }];\n\n                    if (searchTerms) {\n                        breadcrumbs.push({\n                            el: <>{searchTerms}</>,\n                            path: ''\n                        });\n                    }\n\n                    return (\n                        <Breadcrumbs aria-label=\"breadcrumb\">\n                            {breadcrumbs.map((breadcrumb, index, {length}) => (\n                                index < length - 1 ? (\n                                    <Link color=\"inherit\" to={breadcrumb.path} className={classes.link} component={RouterLink}\n                                          key={index}>\n                                        {breadcrumb.el}\n                                    </Link>\n                                ) : (\n                                    <Typography color=\"textPrimary\" className={classes.link} key={index}>\n                                        {breadcrumb.el}\n                                    </Typography>\n                                )\n                            ))}\n                        </Breadcrumbs>\n                    );\n                }}\n            />\n        </div>\n    );\n}\n\nexport default NavigationBreadcrumbs;\n","import React, {useState} from 'react';\nimport {makeStyles} from '@material-ui/core/styles';\nimport Help from '@material-ui/icons/Help';\nimport {Fab, Button, Snackbar} from \"@material-ui/core\";\n\nconst useStyles = makeStyles(theme => ({\n    fab: {\n        position: 'absolute',\n        bottom: theme.spacing(3),\n        right: theme.spacing(3),\n    }\n}));\n\nfunction HelpSnackBarAndButton() {\n    const classes = useStyles();\n    const [isOpen, setIsOpen] = useState();\n\n    const onOpen = () => setIsOpen(true);\n    const onClose = () => setIsOpen(false);\n\n    return (\n        <React.Fragment>\n            <Fab color=\"secondary\" className={classes.fab} onClick={onOpen}>\n                <Help/>\n            </Fab>\n            <Snackbar\n                open={isOpen}\n                message={\n                    <>\n                        A dictionary is said to be consistent if none of the following problems occurs:\n                        <ul>\n                            <li>\n                                <b>Duplicates</b>. Duplicate Domain - Range pairs: Two rows in the dictionary map to the\n                                same value, simply resulting in duplicate content.\n                            </li>\n                            <li>\n                                <b>Forks</b>. Duplicate Domains with different Ranges: Two rows in the dictionary map to\n                                different values, resulting in an ambiguous transformation.\n                            </li>\n                            <li>\n                                <b>Cycles</b>. Two or more rows in a dictionary result in cycles, resulting in a\n                                never-ending transformation.\n                            </li>\n                            <li><\n                                b>Chains</b>. A chain structure in the dictionary (a value in Range column also appears\n                                in Domain column of another entry), resulting in inconsistent transformation.\n                            </li>\n                        </ul>\n                    </>\n                }\n                action={(\n                    <Button color=\"secondary\" size=\"small\" onClick={onClose}>\n                        Close\n                    </Button>\n                )}\n            />\n        </React.Fragment>\n    );\n}\n\nexport default HelpSnackBarAndButton;\n","import React from \"react\";\nimport {AppBar, Grid, Paper, Toolbar, Typography, Container} from \"@material-ui/core\";\nimport {DictionaryProvider} from \"./context/dictionary.context\";\nimport Dictionary from \"./components/Dictionary\";\nimport DictionaryList from \"./components/DictionaryList\";\nimport {HashRouter as Router, Switch, Route} from \"react-router-dom\";\nimport AddDictionaryButton from \"./components/AddDictionaryButton\";\nimport NavigationBreadcrumbs from \"./components/NavigationBreadcrumbs\";\nimport HelpSnackBarAndButton from \"./components/HelpSnackBarAndButton\";\n\nfunction App() {\n    return (\n        <Paper\n            style={{\n                padding: 0,\n                margin: 0,\n                height: \"100vh\",\n                backgroundColor: \"#fafafa\"\n            }}\n            elevation={0}\n        >\n            <AppBar color='primary' position='static' style={{height: \"64px\"}}>\n                <Toolbar>\n                    <Typography color='inherit'>Dictionary Manager</Typography>\n                </Toolbar>\n            </AppBar>\n            <Container maxWidth=\"lg\">\n                <Grid container justify='center' style={{marginTop: \"1rem\"}}>\n                    <Grid item xs={11}>\n                        <DictionaryProvider>\n                            <Router basename=\"/dictionary-manager\">\n                                <NavigationBreadcrumbs/>\n                                <Switch>\n                                    <Route exact path=\"/\">\n                                        <DictionaryList/>\n                                        <AddDictionaryButton/>\n                                    </Route>\n                                    <Route exact path=\"/dictionary/:id\">\n                                        <Dictionary/>\n                                        <HelpSnackBarAndButton/>\n                                    </Route>\n                                </Switch>\n                            </Router>\n                        </DictionaryProvider>\n                    </Grid>\n                </Grid>\n            </Container>\n        </Paper>\n    );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}